@model PaginatedList<HealthyEating.Models.Recipe>

@{
    ViewData["Title"] = "Recipes";
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<div class="col-md-12">
    @foreach (var item in Model)
    {
        <a href="./Recipes/Details/@item.RecipeID">
            <div class="col-md-4">
                <p>
                    @Html.DisplayFor(modelItem => item.RecipeName)
                </p>
                <p>
                    <img src="@Url.Content(item.RecipeImage)" style="height:200px;width:200px;" />
                </p>
                <p>
                    by @Html.DisplayFor(modelItem => item.Users.FullName)
                </p>
            </div>
        </a>
    }

</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
